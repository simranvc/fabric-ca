
Organizations:
    - &Orderer
      Name: Orderer
      ID: org0MSP
      MSPDir: /home/simran/go/src/github.com/hyperledger/fabric-ca/tmp2-msp/org0
      Policies:
            Readers:
                Type: Signature
                Rule: "OR('org0MSP.member')"
                
            Writers:
                Type: Signature
                Rule: "OR('org0MSP.member')"

            Admins:
                Type: Signature
                Rule: "OR('org0MSP.admin')"
    - &Org1
      Name: Org1
      ID: org1MSP
      MSPDir: /home/simran/go/src/github.com/hyperledger/fabric-ca/tmp2-msp/org1
      Policies:
            Readers:
                Type: Signature
                Rule: "OR('org1MSP.member')"
                
            Writers:
                Type: Signature
                Rule: "OR('org1MSP.member')"

            Admins:
                Type: Signature
                Rule: "OR('org1MSP.admin')"

      AnchorPeers:
          - Host: peer1-org1
            Port: 7051
    

Capabilities:
    Channel: &ChannelCapabilities
        V1_4_2: true
        V1_3: false
        V1_1: false
    Application: &ApplicationCapabilities
        V1_4_2: true
        V1_3: false
        V1_2: false
        V1_1: false        
    Orderer: &OrdererCapabilities    
        V1_4_2: true
        V1_1: false

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers	
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ApplicationCapabilities		
Orderer: &OrdererDefaults
  OrdererType: solo
  Addresses:
      - orderer0.example.com:7050
    # - 172.23.155.127:7050
    # - 172.23.155.97:7050
    # - 172.23.155.82:7050
    # - 172.23.155.82:8050
  BatchTimeout: 2s
  BatchSize:
    MaxMessageCount: 500
    AbsoluteMaxBytes: 10 MB
    PreferredMaxBytes: 2 MB
  MaxChannels: 0  
  # EtcdRaft:
  #   Consenters:
  #   - Host: 172.23.155.127
  #     Port: 7050
  #     ClientTLSCert: ./hyperledger/org0/orderer1/tls-msp/signcerts/cert.pem
  #     ServerTLSCert: ./hyperledger/org0/orderer1/tls-msp/signcerts/cert.pem
  #   - Host: 172.23.155.128
  #     Port: 7050
  #     ClientTLSCert: ./hyperledger/org0/orderer2/tls-msp/signcerts/cert.pem
  #     ServerTLSCert: ./hyperledger/org0/orderer2/tls-msp/signcerts/cert.pem
  #   - Host: 172.23.155.97
  #     Port: 7050
  #     ClientTLSCert: ./hyperledger/org0/orderer3/tls-msp/signcerts/cert.pem
  #     ServerTLSCert: ./hyperledger/org0/orderer3/tls-msp/signcerts/cert.pem
  #   - Host: 172.23.155.82
  #     Port: 7050
  #     ClientTLSCert: ./hyperledger/org0/orderer4/tls-msp/signcerts/cert.pem
  #     ServerTLSCert: ./hyperledger/org0/orderer4/tls-msp/signcerts/cert.pem
  #   - Host: 172.23.155.82
  #     Port: 8050
  #     ClientTLSCert: ./hyperledger/org0/orderer5/tls-msp/signcerts/cert.pem
  #     ServerTLSCert: ./hyperledger/org0/orderer5/tls-msp/signcerts/cert.pem
    # Options to be specified for all the etcd/raft nodes. The values here
    # are the defaults for all new channels and can be modified on a
    # per-channel basis via configuration updates.
    # Options:
    #     # TickInterval is the time interval between two Node.Tick invocations.
    #     TickInterval: 500ms

    #     # ElectionTick is the number of Node.Tick invocations that must pass
    #     # between elections. That is, if a follower does not receive any
    #     # message from the leader of current term before ElectionTick has
    #     # elapsed, it will become candidate and start an election.
    #     # ElectionTick must be greater than HeartbeatTick.
    #     ElectionTick: 10

    #     # HeartbeatTick is the number of Node.Tick invocations that must
    #     # pass between heartbeats. That is, a leader sends heartbeat
    #     # messages to maintain its leadership every HeartbeatTick ticks.
    #     HeartbeatTick: 1

    #     # MaxInflightBlocks limits the max number of in-flight append messages
    #     # during optimistic replication phase.
    #     MaxInflightBlocks: 5

    #     # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
    #     SnapshotIntervalSize: 20 MB   
  Organizations:
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "MAJORITY Admins"
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"
  Capabilities:
      <<: *OrdererCapabilities
          
Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"


    Capabilities:
        <<: *ChannelCapabilities

Profiles:

    LegalDescriptionGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *Orderer
        Consortiums:
            LegalDescriptionConsortium:
                Organizations:
                    - *Org1
                    
    LegalDescriptionChannel:
        Consortium: LegalDescriptionConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1            
               